# Generated by Django 4.1.7 on 2023-04-28 20:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="cropType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=20)),
                ("GrowingPeriodDays", models.IntegerField()),
                ("MaxRootDepth", models.IntegerField()),
                ("MaxAllowableDepletion", models.IntegerField()),
                ("MaxRootDepthDaysAfterPlanting", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="drainageType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=50)),
                ("DrainageValue", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="field",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=150)),
                ("Latitude", models.DecimalField(decimal_places=6, max_digits=8)),
                ("Longitude", models.DecimalField(decimal_places=6, max_digits=9)),
                ("Acreage", models.IntegerField()),
                ("Elevation", models.FloatField(null=True)),
                ("PlantDate", models.DateField()),
                (
                    "CropTypeId",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="droughtApp.croptype",
                    ),
                ),
                (
                    "DrainageTypeId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="droughtApp.drainagetype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="hydrologicGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name="soilMoisture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=30)),
                ("InitialSoilMoisturePercent", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="soilType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=50)),
                ("AveragePlantAvailableWater", models.FloatField(null=True)),
                ("PermanentWiltingPoint", models.FloatField(null=True)),
                ("FieldCapacity", models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="unitConversion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("flowMeterReadings", models.CharField(max_length=30)),
                ("indicator", models.IntegerField()),
                ("units", models.CharField(max_length=30)),
                ("conversion", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="user",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("FirstName", models.CharField(max_length=20)),
                ("LastName", models.CharField(max_length=20)),
                ("Email", models.EmailField(max_length=254)),
                ("AuthenticationId", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="irrigation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Date", models.DateField()),
                ("Amount", models.FloatField()),
                (
                    "FieldId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="droughtApp.field",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="field",
            name="HydrologicGroupId",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="droughtApp.hydrologicgroup",
            ),
        ),
        migrations.AddField(
            model_name="field",
            name="OwnerId",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="droughtApp.user"
            ),
        ),
        migrations.AddField(
            model_name="field",
            name="SoilMoistureId",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="droughtApp.soilmoisture",
            ),
        ),
        migrations.AddField(
            model_name="field",
            name="SoilTypeId",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="droughtApp.soiltype"
            ),
        ),
        migrations.AddField(
            model_name="drainagetype",
            name="HydrologicGroupId",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="droughtApp.hydrologicgroup",
            ),
        ),
        migrations.CreateModel(
            name="cropPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=30)),
                ("CropCoefficient", models.CharField(max_length=30)),
                ("DaysAfterPlanting", models.IntegerField()),
                (
                    "CropTypeId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="droughtApp.croptype",
                    ),
                ),
            ],
        ),
    ]
